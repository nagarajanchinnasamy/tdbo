# database.tcl --
#
# Generic Database interface that needs to be implemented by
# database-specific modules (eg., sqlite, mysql, oracle etc.
#
# Copyright (c) 2013 by Nagarajan Chinnasamy <nagarajanchinnasamy@gmail.com>
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

# ----------------------------------------------------------------------
# class Database
#
#
#
# ----------------------------------------------------------------------
itcl::class tdbo::Database {
	inherit tdbo::Object
# ----------------------------------------------------------------------
# constructor:
#
#
#
# ----------------------------------------------------------------------
constructor {} {
}
# ----------------------------------------------------------------------
# destructor
#
#
#
# ----------------------------------------------------------------------
destructor {
}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method open {args}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method close {}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method get {schema_name condition}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method mget {schema_name args}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method insert {schema_name namevaluepairs {sequence_fields ""}}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method update {schema_name namevaluepairs {condition ""}}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method delete {schema_name {condition ""}}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method initialize {schema_type schema_name schema_description}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method begin {{lock deferred}}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method commit {}
# ----------------------------------------------------------------------
#
#
#
#
# ----------------------------------------------------------------------
public method rollback {}

# -------------------------END------------------------------------------
}
